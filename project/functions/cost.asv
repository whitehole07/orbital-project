function [ts, Dvs, states_arcs] = cost(departure_window, departure_planet, arrival_window, arrival_planet)
%COST Summary of this function goes here
%   Detailed explanation goes here
    arguments
        departure_window TimeWindow
        departure_planet CelestialBody
        arrival_window TimeWindow
        arrival_planet CelestialBody
    end
    
    % Get iterator
    departure = departure_window.getIterator();
    arrival = arrival_window.getIterator();
    
    % Init variables
    ts = zeros(size(arrival, 2), size(departure, 2));
    Dvs = zeros(size(arrival, 2), size(departure, 2));
    states_arcs = zeros(size(arrival, 2), size(departure, 2));

    for i = 1:size(departure, 2)
        % Initial state
        P1 = departure_planet.ephemerides(departure(i).mjd2000);
        
        for j = 1:size(arrival, 2)
            % Final state
            P2 = arrival_planet.ephemerides(arrival(j).mjd2000);

            [arc, ~, Dv] = lambertOrbitTransfer(P1, P2, P2.t - P1.t);
        end
    end

end

